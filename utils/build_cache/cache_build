#!/bin/bash
shxt(){ printf '%s\n' "$1"; exit "${2:-1}"; }
cache_dir="$PWD"/out/cache/
tmp_dir="$PWD"/out/tmp/

# readlink -f requires everything to be valid, therefore missing the point of mkdir *-p*.
base_info=$1 finger_print=$2 out_dir=$(readlink -m "$3")
shift 3

[ -f "$finger_print" ] || shxt "Fingerprint file not found!"

finger_sha256=$(sha256sum "$finger_print") finger_sha256=${finger_sha256%% *}

mkdir -p "$cache_dir" "$tmp_dir" "$out_dir"

# What do you think you are doing? Just assume the filename works.
if [[
	-e ${cache_dir}/${base_info}_${finger_sha256}.tar.xz &&
	"$(<"$finger_print")" == "$(<"${cache_dir}/${base_info}_${finger_sha256}.fingerprint")"
]]; then
	echo "Cache Hit for ${base_info}_${finger_sha256}!"
	tar xvfpa "${cache_dir}/${base_info}_${finger_sha256}".tar.xz -C "$out_dir"
	exit
fi

# Cache miss

echo "Cache miss for ${base_info}_${finger_sha256}"

dest_dir=$(TMPDIR=$tmp_dir mktemp -d)

if PKGDIR=$dest_dir bash "$@"; then
	echo "${base_info}_${finger_sha256} built"
	(cd "$dest_dir"; tar cvfJ ${cache_dir}/${base_info}_${finger_sha256}.tar.xz *)
	cp "$finger_print" "${cache_dir}/${base_info}_${finger_sha256}.fingerprint"
	echo "${base_info}_${finger_sha256} cached"
	tar xvfpa ${cache_dir}/${base_info}_${finger_sha256}.tar.xz -C "$out_dir"
else
	shxt "${base_info}_${finger_sha256} building failed"
fi

rm -rf "$dest_dir"
